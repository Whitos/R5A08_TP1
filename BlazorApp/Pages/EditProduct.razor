@page "/edit-product/{id:int}"
@inject IProductService productService
@inject NavigationManager navManager

<PageTitle>Modifier Produit</PageTitle>

<h3>Modifier un Produit</h3>

@if (product == null)
{
    <p><em>Chargement...</em></p>
}
else
{
    <EditForm Model="product" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label class="form-label">Nom</label>
            <InputText class="form-control" @bind-Value="product.NameProduct" />
        </div>

        <div class="mb-3">
            <label class="form-label">Description</label>
            <InputText class="form-control" @bind-Value="product.Description" />
        </div>

        <div class="mb-3">
            <label class="form-label">Marque</label>
            <InputNumber class="form-control" @bind-Value="product.IdBrand"/>
        </div>

        <div class="mb-3">
            <label class="form-label">Type de Produit</label>
            <InputNumber class="form-control" @bind-Value="product.IdTypeProduct"/>
        </div>

        <button type="submit" class="btn btn-success">Enregistrer</button>
        <button type="button" class="btn btn-secondary" @onclick="GoBack">Annuler</button>
    </EditForm>
}

@code {
    [Parameter] public int id { get; set; }
    private ProductUpdateDto? product;

    protected override async Task OnInitializedAsync()
    {
        var detail = await productService.GetByIdAsync(id);

        if (detail != null)
        {
            product = new ProductUpdateDto
            {
                IdProduct = detail.IdProduct,
                NameProduct = detail.NameProduct,
                Description = detail.Description,
                IdBrand = detail.IdProduct,
                IdTypeProduct = detail.IdProduct,
            };
        }
    }

    private async Task HandleValidSubmit()
    {
        if (product != null)
        {
            await productService.UpdateAsync(product);
            navManager.NavigateTo("/products");
        }
    }

    private void GoBack()
    {
        navManager.NavigateTo("/products");
    }
}
