// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using R5A08_TP1.Models.EntityFramework;

#nullable disable

namespace R5A08_TP1.Migrations
{
    [DbContext(typeof(ProductsDbContext))]
    [Migration("20251002204332_InitBaseline")]
    partial class InitBaseline
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("R5A08_TP1.Models.EntityFramework.Brand", b =>
                {
                    b.Property<int>("IdBrand")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_brand");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdBrand"));

                    b.Property<string>("NameBrand")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name_brand");

                    b.HasKey("IdBrand");

                    b.ToTable("brand");
                });

            modelBuilder.Entity("R5A08_TP1.Models.EntityFramework.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_product");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProduct"));

                    b.Property<int>("ActualStock")
                        .HasColumnType("integer")
                        .HasColumnName("actual_stock");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("IdBrand")
                        .HasColumnType("integer")
                        .HasColumnName("id_brand");

                    b.Property<int?>("IdTypeProduct")
                        .HasColumnType("integer")
                        .HasColumnName("id_type_product");

                    b.Property<int>("MaxStock")
                        .HasColumnType("integer")
                        .HasColumnName("max_stock");

                    b.Property<int>("MinStock")
                        .HasColumnType("integer")
                        .HasColumnName("min_stock");

                    b.Property<string>("NamePhoto")
                        .HasColumnType("text")
                        .HasColumnName("name_photo");

                    b.Property<string>("NameProduct")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name_product");

                    b.Property<string>("UriPhoto")
                        .HasColumnType("text")
                        .HasColumnName("uri_photo");

                    b.HasKey("IdProduct");

                    b.HasIndex("IdBrand");

                    b.HasIndex("IdTypeProduct");

                    b.ToTable("product");
                });

            modelBuilder.Entity("R5A08_TP1.Models.EntityFramework.TypeProduct", b =>
                {
                    b.Property<int>("IdTypeProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_type_product");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTypeProduct"));

                    b.Property<string>("NameTypeProduct")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name_type_product");

                    b.HasKey("IdTypeProduct");

                    b.ToTable("type_product");
                });

            modelBuilder.Entity("R5A08_TP1.Models.EntityFramework.Product", b =>
                {
                    b.HasOne("R5A08_TP1.Models.EntityFramework.Brand", "RelatedBrand")
                        .WithMany("RelatedProductsBrands")
                        .HasForeignKey("IdBrand")
                        .HasConstraintName("FK_produits_marque");

                    b.HasOne("R5A08_TP1.Models.EntityFramework.TypeProduct", "RelatedTypeProduct")
                        .WithMany("RelatedProducts")
                        .HasForeignKey("IdTypeProduct")
                        .HasConstraintName("FK_type_produit_produits");

                    b.Navigation("RelatedBrand");

                    b.Navigation("RelatedTypeProduct");
                });

            modelBuilder.Entity("R5A08_TP1.Models.EntityFramework.Brand", b =>
                {
                    b.Navigation("RelatedProductsBrands");
                });

            modelBuilder.Entity("R5A08_TP1.Models.EntityFramework.TypeProduct", b =>
                {
                    b.Navigation("RelatedProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
